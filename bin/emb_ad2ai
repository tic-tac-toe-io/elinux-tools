#!/bin/bash
#
##DOC:	produce archive image (*.sxz, *.sqfs.xz) from archive directory with mksquashfs

function mycli_command_prerequisites {
cat <<__EOF__
mksquashfs
pv
pxz
gzip
__EOF__
}


function mycli_command_help {
cat <<__EOF__
${CLI_NAME} ${CLI_ACTION} [ARCHIVE DIRECTORY] [ARCHIVE IMAGE]

For example:
	${CLI_NAME} ${CLI_ACTION} $(GREEN "/tmp/bb-14.04.3" "/tmp/bb-14.04.3.sxz")
	${CLI_NAME} ${CLI_ACTION} $(GREEN "/tmp/bb-14.04.3" "/tmp/bb-14.04.3.sgz")
	${CLI_NAME} ${CLI_ACTION} $(GREEN "/tmp/bb-14.04.3" "/tmp/bb-14.04.3.sqfs.xz")

1st example to produce squashfs image with xz compression algorithm
2nd example to produce squashfs image with gzip compression algorithm
3rd example to produce squashfs image without compression, and then use xz to compress entire squashfs image file
__EOF__
}


function mycli_command_entry {
	local ARCHIVE_DIR=$1
	local ARCHIVE_IMAGE=$2
	[ ! -d "${ARCHIVE_DIR}" ] && ERR "missing archive directory: ${ARCHIVE_DIR}" && exit 1
	[ -f "${ARCHIVE_IMAGE}" ] && rm -f ${ARCHIVE_IMAGE}

	local ARCHIVE_EXT="${ARCHIVE_IMAGE##*.}"
	local ALGORITHM="gzip"
	local COMPRESSOR="gzip"
	local SQFS_FILE=""

	case "${ARCHIVE_EXT}" in
		sgz)
			ALGORITHM="gzip"
			;;
		sxz)
			ALGORITHM="xz"
			;;
		xz|gz)
			[ "${ARCHIVE_IMAGE}" == "$(basename ${ARCHIVE_IMAGE} .sqfs.${ARCHIVE_EXT})" ] && ERR "unsupported format: ${ARCHIVE_IMAGE}" && exit 2
			SQFS_FILE=$(echo ${ARCHIVE_IMAGE} | tr '.' '\n' | sed '$ d' | tr '\n' '.' | sed 's/\.$//g')
			[ "xz" == "${ARCHIVE_EXT}" ] && ALGORITHM="xz" && COMPRESSOR="pxz"
			;;
		sqfs)
			ALGORITHM=""
			SQFS_FILE=""
			;;
		*)
			ERR "unsupported format: ${ARCHIVE_IMAGE}" && exit 2
			;;
	esac

	if [ "" == "${SQFS_FILE}" ]; then
		if [ "" == "${ALGORITHM}" ]; then
			ALGORITHM="gzip"
			EXTRA_OPTS="-noD -noF -noX"
		fi
		local CMD="mksquashfs ${ARCHIVE_DIR} ${ARCHIVE_IMAGE} -comp ${ALGORITHM} -noI ${EXTRA_OPTS} -no-duplicates -progress"
		INFO "$(PURPLE ${CMD})" && ${CMD}
	else
		local CMD="mksquashfs ${ARCHIVE_DIR} ${SQFS_FILE} -comp ${ALGORITHM} -noI -noD -noF -noX -no-duplicates -progress"
		INFO "$(PURPLE ${CMD})" && ${CMD}
		local SIZE=$(du -sb ${SQFS_FILE} | awk '{print $1}')
		CMD="cat ${SQFS_FILE} | pv -s ${SIZE} | ${COMPRESSOR} -c > ${ARCHIVE_IMAGE}"
		INFO "$(PURPLE ${CMD})" && bash -c "${CMD}"
	fi
}
