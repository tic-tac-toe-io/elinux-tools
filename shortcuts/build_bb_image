#!/bin/bash

function build_image {
	local CURRENT=$(pwd)
	cd $(dirname $0)
	cd ..
	local REPO_NAME=$(basename $(pwd))
	local CACHE_DIR="/var/lib/${REPO_NAME}"
	local URL=$1
	[ "" == "${URL}" ] && URL="https://archives.t2t.io/embedded-linux/os/beaglebone/mirrors/elinux.org/bb-green/bone-ubuntu-14.04.3-console-armhf-2016-02-11-2gb.img.xz"
	cd ${CURRENT}

	mkdir -p ${CACHE_DIR}

	local FILE=$(basename ${URL})
	local DOWNLOAD_FILE="${CACHE_DIR}/${FILE}"
	local NAME=${FILE}
	NAME=${NAME%.*}
	local DEVICE_IMAGE_FILE="${CACHE_DIR}/${NAME}"
	NAME=${NAME%.*}
	local ARCHIVE_DIR="/tmp/${NAME}-$(date '+%Y%m%d%H%M%S')"
	local ARCHIVE_IMAGE="/tmp/${NAME}.sqfs.xz"
	echo "DOWNLOAD_FILE = ${DOWNLOAD_FILE}"
	echo "NAME = ${NAME}"
	echo "DEVICE_IMAGE_FILE = ${DEVICE_IMAGE_FILE}"
	echo "ARCHIVE_DIR = ${ARCHIVE_DIR}"
	echo "ARCHIVE_IMAGE = ${ARCHIVE_IMAGE}"

	rm -rf ${ARCHIVE_DIR}

	[ ! -f "${DOWNLOAD_FILE}" ] && wget -O ${DOWNLOAD_FILE} ${URL}
	[ "0" != "$?" ] && echo "failed to download ${URL}" && exit 1

	[ ! -f "${DEVICE_IMAGE_FILE}" ] && unxz -k ${DOWNLOAD_FILE}
	[ "0" != "$?" ] && echo "failed to uncompress ${DOWNLOAD_FILE}" && exit 2

	[ ! -f "${DEVICE_IMAGE_FILE}" ] && echo "still missing ${DEVICE_IMAGE_FILE}" && exit 3

	export DUMP_AM335X_UBOOT_FROM_MBR=true
	echo "start composing ..." && \
		emb di2ad ${DEVICE_IMAGE_FILE} ${ARCHIVE_DIR} && \
		emb convert_ad ${ARCHIVE_DIR} bb1to2 && \
		emb ad2ai ${ARCHIVE_DIR} ${ARCHIVE_IMAGE}
}

build_image $@
